-------------- 어제 복습. --------------

date 
sudo -i
timedatectl
cal
clear, ctrl+L
history
man, man 5 passwd
whatis

logname
whoami
who am i
id
users
who
w

ip a
ping 10.0.2.4

uname  (시스템 정보 보는법)  , uname -a
hostname
arch

env (환경변수보는 명령어)
echo , echo -e Hello World "\n" who are you 
which , which ls , which fdisk, which passwd
time 
finger 
mesg  [ y | n ] 
write
wall
whatis
sleep 5s 
clear
su

-----------------------------------------------------

public ip 는 공유기 같은 거에만 할당을 받을 수 있고, 일반 컴퓨터는 거기서 따로 받는건데, 
여기서 메인으로 갈때는 상관이 없는데, 
메인관리자에서 우리까지 오려면 공유기 까지만 올 수 있으니까 
포트 포워딩을 해주어야한다. SQ : 192.168.0.5 뭐 이런식으로 직접 정해줘야 접속이 가능.


----------------------
파일 관리 명령어

cd (change directory)


~/Downloads$ ls
~/Downloads$ pwd    //?? 뭐임 나는 왜 그런 파일이나 디렉토리가 없대

cd Downloads를 치면 ~/Downloads$ 이렇게 들어감 굳.


파일은 inode 로 해서 연결되어있음. 
direct data block 으로 하나에 4k? 로 저장되어있는데 
	indirect data block 으로 하나의 inode 에 indirect 하나 그 다음에 datablock
	형식으로 해서 하나에 더 많은 용량 저장가능
		doubly indirect data block 을 활용해서 4T 까지도 가능하다고 함.

* 모든 데이터는 파일이라는 인터페이스를 가짐. 
	-현재 실행중인 프로세스, 일반 파일, 하드웨어
윈도우에서는 .exe 인데 리눅스는 특별한 확장명은 제공하지 않음.

* 서로 다른 이름의 파일이 존재하여도 I-node 가 같으면 동일한 파일이다. (모두가 i-node 로 관리하기 때문에)

원래는 하드디스크를 512 씩 섹터로 나눠서 썼었는데  이제는 합쳐서 쓰는게 더 효과적..?
데이터 블록이 하드디스크 같은 느낌.


리눅스 파일에는 일반, 디렉터리, 특수 (파일)이 있다. 
			특수에는 파이프, 소켓, 주변장치로 구성됨.


리눅스에서는 디렉토리 계층구조를 좀 알아야함.
무조건 /" ROOT" 밑에 /~ 여러개가 있음. 서브 디렉토리 들이 있음.

cd /  ( 이게 루트 디렉토리)
ls -l
tree

작업디렉토리, 홈디렉토리
pwd 치면 /home/dohdong 나옴.
ls
sudo -i 치고, 암호 치고 pwd 하면 /root 가 나오지.

cd ~dohdong

cd 명령어를 이용하여 디렉토리간 이동이 가능하다.

절대경로,  ex) cd /home/user1  , 상대경로 ex) cd ../home/dohdong/Downloads/
cd 하고 / 가 나오면 절대경로  .. 이나 . 이 나오면 상대경로.   .. 은 현재 위치의 바로 위 디렉토리,  . 은 현재 디렉토리

ls -al 로 알 수도 있음.  보면 . , .. 이 있다. 


디렉토리 만들고 싶으면 mkdir (파일명) 해서 만들수있음. , @ # 이런 특수문자는 파일 이름x , - _ . 은 가능. 대소문자 구분
				맨 앞이 . 으로 시작하는 파일은 숨김파일.
touch (abc.txt) 로 파일하나 만들수 있음. ls -a 로 숨김파일도 다 볼 수 있음

cd /etc 로 들어가서 ls -l net* 으로 net 으로 시작하는 파일들만 볼 수 있음.
		ls -ld [t-u]*  (t~u 까지 검색) 
wildcard  
* (전체 다 표시)  , [a-c]  (a 부터 c 까지)   , ?   ex) ls -l ab?.txt (ab로 시작하고 .txt 로 끝나는 녀석 검색)    , 

ls 에서 ls netplan , ls -l netplan , ls -ld netplan 다 조금씩 다르다.
마찬가지로 ls , ls -a , ls -all 도 다르네.

홈디렉토리는 그냥 자기계정의 /home 디렉토리임. 그냥 cd 치면 나오는 /home/dohdong 말하는건가..? 흠

ls -F, ls -S , ls -D , ls -l (목록들의 상세 정보가 나온다.) 등등 뭐 다양하다.
ls -l 하면 앞에꺼(배울예정) , 사용자계정, 사용자id, 4096(설정해준 byte 인듯) , 날짜 , 위치 이런식인가봄
앞에꺼 에서  
-rw-rw-rw 1 dohdong dohdong
d 는 디렉토리 , p , s , b (block device) , c (character device) , - (일반적인경우), 
 * 194p 에 표시된 위치의 의미 있고, 뭐가 뭔지 나와있음

tree -L 1 로 뭔가 긴 어떤 것들이 나옴. 그 아래에 속한 뭐 그런게 나오는듯.

ls cd pwd 를 배운것임.



mkdir 디렉토리를 만드는 명령
mkdir 로 만드는데, mkdir -p source/kernel (이걸로 계층적인 디렉토리를 만들 수 있다~)
지우고 싶으면 rmdir 하면 지워짐
근데 안에 파일이 있으면 지워지지 않음. 그래서 rm 을 활용해야하는데 rm 으로 디렉터리는 못지움 
* 그러나  rm -r tmp 를 하면 파일이 있는 tmp가 지워진다.

touch 로 안에 파일을 생성할수있음
생성 날짜를 바꾸는 조작을 할때 touch -t 2510311310 test1.txt

which, whereis


------------------점심 이후 -------------------

sudo -i , ls /dev/tty* , echo hellow > /dev/tty4

stat -f .  


copy 명령어 
cp
cp /etc/hosts .    이때 마지막 . 은 현재디렉토리를 의미한다.
cp -b /etc/hosts .   충돌방지.

cp -d /etc/rmt .   이랑  cp /etc/rmt .  을 한건 서로 다름 . 하나는 단순히 링크만? 복사하고 다른건 전체를 복사 했다? 

cp -i /etc/hosts .    덮어쓸까요? 는 뭐 n 로 함.

cp -p /etc/hosts test.txt ( 이름을 바꿔서 복사)

ll

cp -s /etc/hosts host  (링크가 걸리는 것 같음)

cp -r /etc .

rm -r etc (하면 삭제) 근데 권한이없을수도있음 그럴땐 rm -rf etc 로 강제 삭제  rm -i 로 삭제할지 물어볼수있음

cp -v -r /etc . (이건 -v 로 무엇을 하고 있는 중인지 설명) 

cp  -i  ,  -v  ,  -s  , -d  ,  -p   ,  -r



file 명령어

file test.txt  하면 파일이 어떤 파일인지 알려줌 ,   file hosts  ,  file /bin/ls 

mv hosts abc.txt 

mv abc.txt ~   ( home 디렉토리로 옮김.)

mv [파일위치/파일이름.txt] [목적지파일위치/파일이름.txt]

ln 
cp /etc/hosts .  하고  ls -l hosts 로 확인도 가능
이제 심볼릭 링크? 
ln -s hosts hs2
ls -l
cat hs
ln hosts addd
rm abbb 
하드링크는 많이 안쓰니까 그냥 있다라는것만 알면 됨. 이미 모름 퉷


find 명령어

sudo -i  (root 계정으로 들어가야 함)

find /etc -name hosts  (hosts파일 의 위치 확인용)
find /etc -name hosts -print
find /etc -name hosts -ls     (-ls 는 ls 옵션처럼 표시되게 하기 위한 내용) 
find /run -uid 1000 -print
find / -size +30000k -exec ls -l {} \;   
(size 30000k 이상을 찾아라,  실행, ls -l 으로?   , {} 는 찾은 결과를 표시한다. ; 는 끝?)
위에 내용이 find 패턴인데 음... 아직은 잘 모르겠음. 나중에 알게될까? 흠...



cat 명령은 file name 을 보여주는것. 
cat ~dohdong/(파일이름)
cat -n ~dohdong/(파일이름)
cat /etc/services  (cat 은 전체 표시)

head /etc/services (위에 10줄)
head -5 /etc/services
tail /etc/services


grep 명령어 
grep , egrep, fgrep . 

grep 'dohdong' /etc/passwd /etc/group
grep -h 'dohdong' /etc/passwd /etc/group (파일명은 표시 안하는 옵션?)
grep -n 'dohdong' /etc/passwd /etc/group (파일명과 line 번호까지 표시) 

ls -l /var/log | grep "^d"   (var/log 안에 d 로 시작하는 파일들 찾는)


more 명령어 
more /etc/services
less /etc/services


redirection
echo Hello world > hello.txt
echo tee demonstration | tee(여기가 명령어) redirection.txt 
( tee 는 표준출력으로도 해주고, 파일로도 해주는 두가지 일을 한다. )  

0 은 뭐라고?
1 표준출력
2 표준에러

ctrl+d, ctrl+c 등으로 나올수있음.

(date && errorcommand) > redirection.txt  (errorcommand 라는 명령어는 없으니까 에러가 남) 
					(근데 redirection.txt 열어보면 date 가 들어있음 뭐임?)
head redirection.txt
 > redirection.txt (하면 null값이 들어간다) 
A > file
: > file
A n> file   ex) (date && errorcommand) 2> redirection.txt  , cat redirection.txt 하면 errorcommand 가 들어있음.
A &> file  ex) (date && errorcommand) &> redirection.txt , cat  "   하면 출력결과와 에러 둘다 들어있음.
A >> file  ex) echo "Appended test" >> redirection.txt  , 맨끝에 "  " 안에 내용이 추가됨을 알 수 있다.


Pipe 명령어
A | B		cd /etc 로 가서 ls -l , ls -l | grep xatt*

mkfifo myfifo  ,     ls -l myfifo 
cat hello.txt > myfifo 하고 다른 터미널 열어서 cat myfifo 하면 서로 통신이 됨을 알수있다?

ls -l hello.txt 치면 -rw-rw-r-- 1 dohdong dohdong 12 2월 17 14:49 hello.txt 가 나오는데 이 문장에 대해 알아야한다. 뭐 파일 속성이나 소유권 등 그런내용인듯

-rw-rw-r-- 1 
맨 앞은 소유자권한, r 은 읽기, w 는 write 권한인가봄. 근데 이거는 마지막이 w 가 없는데 마지막은 write 권한이없나봄.

su - user1 , ls , cd ~dohdong/ , ls -l  , nano hello.txt 를 보면 파일에 기록할수 없다고 뜸 other 가 w 권한이 없어서.
 
chmod o+w hello.txt  하면 -rw-rw-rw- 로 w 권한이 생김 

다시 su 로 가서 user1 을 보면 권한이 생겨서 변경이 가능해졌다. 

chmod u-w hello.txt 로 권한을 빼버리면 -r--rw-rw- 로 유저의 w 권한이 사라짐.
chmod g+x hello.txt 로 권한을 주면 -r--rwxrw- 가 된다.  확인은 ls -l hello.txt 로 가능.
x 로 실행권한을 주는것임.  chmod a+x hello.txt 로 모두에게 실행권한을 주는것도 가능.
chmod u+w,g-w hello.txt 로 한번에 여러개도 가능.
chmod a=rwx hello.txt 로 모두를 -rwxrwxrwx 로 모든 권한을 줄 수도 있음.

195p 에도 비슷한 내용이 있는데 위의 권한을 숫자로도 표현할수있다. 가장앞에 소유자(User) 는 100~700으로 400,200,100 으로 , 그룹(Group) 은 040,020,010 , 그외 (Other) 는 004,002,001 로 가능하다.
chmod 000 hello.txt 하면 아예 권한을 안주거나  chmod 466 hello.txt 하면 -r--rw-rw- 로 된다.
소유자한테만 rw 권한을 주는건 chmod 600 hello.txt 하면 된다. 파일허가권이 754 라면 -rwxr-xr-- 이다.

umask 
디렉토리 만들어보면 drwxrwxr-x  인데  (확인은 ls -ld testdir/ 로 가능)
이게 defualt 값이 umask -S 가 그렇게 설정되어있기때문이다.
0002 인데 777에서 002 빼면 775 -> 이게 디폴트

파일은 664 로 실행권한이 빠져서 생성이 된다.

umask 를 변경하면 당연히 변한다. 
umaks 22 로 변경가능

ls -l /etc/passwd 				얘는 -rw-r--r--
which passwd  , ls -l /usr/bin/passwd  		얘는 -rwsr-xr-x 로 서로 다름.
보면 x 가 아니라 s 로 set uid ? 뭐 슈퍼계정어쩌고저쩌고   //있다~ 라고 알고만 있으면 됨.

chmod 4777 hello.txt  ( 맨 앞자리는 set uid, gid 뭐 그런거라는데
file hello.txt

--여기까지 접근권한 설명.

그 다음이 소유자, 접근권한? 

sudo -i 에서 cp -r /etc ~dohdong/tmp/ 하고 나와서 ls -l  , cd tmp/ , ls -l 

sudo(안하면 권한없음) chown dohdong zsh_command_not_found 이후 ls -l 하면 뭐가 변한건가 안변한건가 모름ㅅㅂ

chgrp chown dohdong zsh_command_not_found 하고 ls -l 하면 맨 아래에 소유주가 root root 이던게 일단 
dohdong root 가 되었다가 chgrp 까지 해주면 dohdong dohdong 으로 둘다 변한다.

sudo chown dohdong:dohdong xattr.conf 하니까 xattr.conf 파일 소유주가 두개다 한번에 변했다.
폴더 안에 소유주 다 바꾸려면 sudo chown dohdong:dohdong * 하니까 다 바뀜 
sudo chown -R dohdong:dohdong /etc 하니까 다 바뀐다는데 뭐임? 이래도 바뀌나봄 안해봄 모름 걍 ㅈ같음 ㅅㅂ

근데 cd tmp/ , cd etc/ 로 들어가는거랑 cd /tmp 이걸로 들어가는거랑 차이가 뭐지? 뭐지?


내일은 vi 에디터 부터 시작.







 







.